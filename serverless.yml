service:
  name: ynab-sync

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local

package:
  excludeDevDependencies: false
  exclude: ${file(sls-exclude.js):get}

custom:
  stage: ${opt:stage, self:provider.stage}
  s3Bucket: ${self:service:name}-uploads
  dynamoThroughputs:
    prod: 1
    default: 1
  dynamoThroughput: ${self:custom.dynamoThroughputs.${self:custom.stage}, self:custom.dynamoThroughputs.default}
  # dynamodb-local config
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
      # noStart: true
    seed:
      accounts:
        sources:
          - table: ${self:service}-${self:custom.stage}
            sources: [./seed/accounts.json]

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.s3Bucket}/*"
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:ssm:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":parameter/*"
  environment:
    SECRET_ID: secrets
    DYNAMODB_TABLE: ${self:service}-${self:custom.stage}
    DEBUG: ynab-sync:*

functions:
  sync:
    handler: src/handler.sync
    memorySize: 1024
    timeout: 300
    events:
      - schedule: cron(0 21 * * ? *)
    environment:
      BUCKET: ${self:custom.s3Bucket}

resources:
  Resources:
    S3BucketOutputs:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bucket}
    YnabSyncDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:service}-${self:custom.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.dynamoThroughput}
          WriteCapacityUnits: ${self:custom.dynamoThroughput}
